// Terraria SDK CodeGen
// This code was generated by the program, and it's normally if there are warnings.


using Microsoft.Xna.Framework;
using Ruby.Network.Comfortable.Models;

namespace Ruby.Network.Comfortable.Packets;

internal class PlayerInfoPacket : IPacket<PlayerInfo>
{
   public int PacketID => 4;
   public PlayerInfo Deserialize(byte[] data)
   {
       using MemoryStream stream = new MemoryStream(data);
       using BinaryReader reader = new BinaryReader(stream);
       
       Byte playerIndex = reader.ReadByte();
       Byte skinVariant = reader.ReadByte();
       Byte hair = reader.ReadByte();
       String name = reader.ReadString();
       Byte hairDye = reader.ReadByte();
       UInt16 accessoryVisiblity = reader.ReadUInt16();
       Byte hideMisc = reader.ReadByte();
       Color hairColor = reader.ReadColor();
       Color skinColor = reader.ReadColor();
       Color eyeColor = reader.ReadColor();
       Color shirtColor = reader.ReadColor();
       Color underShirtColor = reader.ReadColor();
       Color pantsColor = reader.ReadColor();
       Color shoesColor = reader.ReadColor();
       PlayerInfo1 info1 = reader.Read<PlayerInfo1>();
       PlayerInfo2 info2 = reader.Read<PlayerInfo2>();
       PlayerInfo3 info3 = reader.Read<PlayerInfo3>();
       
       return new()
       {
           PlayerIndex = playerIndex,
           SkinVariant = skinVariant,
           Hair = hair,
           Name = name,
           HairDye = hairDye,
           AccessoryVisiblity = accessoryVisiblity,
           HideMisc = hideMisc,
           HairColor = hairColor,
           SkinColor = skinColor,
           EyeColor = eyeColor,
           ShirtColor = shirtColor,
           UnderShirtColor = underShirtColor,
           PantsColor = pantsColor,
           ShoesColor = shoesColor,
           Info1 = info1,
           Info2 = info2,
           Info3 = info3,
       };
   }
   public byte[] Serialize(PlayerInfo data)
   {
       return new PacketWriter().SetType(4)
           .PackByte(data.PlayerIndex)
           .PackByte(data.SkinVariant)
           .PackByte(data.Hair)
           .PackString(data.Name)
           .PackByte(data.HairDye)
           .PackUInt16(data.AccessoryVisiblity)
           .PackByte(data.HideMisc)
           .PackColor(data.HairColor)
           .PackColor(data.SkinColor)
           .PackColor(data.EyeColor)
           .PackColor(data.ShirtColor)
           .PackColor(data.UnderShirtColor)
           .PackColor(data.PantsColor)
           .PackColor(data.ShoesColor)
           .PackByte((byte)data.Info1)
           .PackByte((byte)data.Info2)
           .PackByte((byte)data.Info3)
           .BuildPacket();
   }
}
 
public struct PlayerInfo
{
   public Byte PlayerIndex;
   public Byte SkinVariant;
   public Byte Hair;
   public String Name;
   public Byte HairDye;
   public UInt16 AccessoryVisiblity;
   public Byte HideMisc;
   public Color HairColor;
   public Color SkinColor;
   public Color EyeColor;
   public Color ShirtColor;
   public Color UnderShirtColor;
   public Color PantsColor;
   public Color ShoesColor;
   public PlayerInfo1 Info1;
   public PlayerInfo2 Info2;
   public PlayerInfo3 Info3;
}
